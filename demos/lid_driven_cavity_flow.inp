ocellaris:
    type: input
    version: 1.0
    
metadata:
    author: Tormod Landet
    date: 2015-02-13
    description: |
        Implements the lid driven cavity flow test case. This benchmark case
        has no analytical solution, but is a nice way to test the solver in
        presence of viscous shear and discontinuities.
        
        Comparison data is included below. This data is available in the
        post-processor, but is not used in the simulation. The data is from
        a paper by V. Ghia, K.N. Ghia and C.T. Shin, "High-Re solutions for
        incompressible flow using the Navier-Stokes equations and a multi-grid
        method", published in J.Comp.Phys., v.48, 1982, pp.387-411.

        NOTE:
        
        Even though lid driven cavity flow is a popular benchmark due to the
        simple geometry and boundary conditions, it does have a complex
        solution with singularities in the corners where the lid meets the
        walls. If you modify Ocellaris and do not get this demo working with
        your new numerical scheme, please look at the mesh near the
        singularities before feeling bad about it, many methods break down
        without mesh refinement in the upper corners. For testing new numerical
        schemes, a test case with a smooth solution, such as the Taylor-Green
        vortex, is a much better place to start.

physical_properties:
    g: [0, 0]
    nu: 0.001
    rho: 1.0

mesh:
    type: Rectangle
    Nx: 40
    Ny: 40
    # Make the mesh cells smaller towards the top and the two sides by fitting
    # a second/third order polynomial to the desired mesh displacement, see
    # https://www.ocellaris.org/user_guide/input/mesh.html#moving-the-mesh
    # for details on how to do that.
    # Here a move of +/- 0.07 is used at locations x=0.1, x=0.9 and y=0.9 with
    # zero displacement at the boundaries
    move:
    -   -1.944444444*pow(x[0], 3) + 2.916666667*pow(x[0], 2) + -0.9722222222*x[0] + -7.771561172e-16
    -   -0.7777777778*pow(x[1], 2) + 0.7777777778*x[1] + 0

boundary_conditions:
-   name: walls    
    selector: code
    inside_code: on_boundary
    u:
        type: ConstantValue
        value: [0, 0]
    p:
        type: ConstantGradient
        value: 0

-   name: lid
    selector: code
    inside_code: on_boundary and x[1] >= 1.0 - 1e-8
    u:
        type: ConstantValue
        value: [1, 0]
    p:
        type: ConstantGradient
        value: 0

time:
    dt: 0.01
    tmax: 30.0

output:
    prefix: output/lid_driven_cavity_flow
    dolfin_log_level: warning
    ocellaris_log_level: info
    xdmf_write_interval: 100

solver:
    type: IPCS-A
    num_inner_iter: 5
    allowable_error_inner: 1e-3
    steady_velocity_stopping_criterion: 1.0e-4

probes:
-   name: u-vel center
    type: LineProbe
    field: u0
    startpos: [0.5, 0]
    endpos: [0.5, 1]
    Npoints: 100
    file_name: uprobe.txt
    write_interval: 10

    # Targets only used in post-processor
    target_name: Ghia et al
    target_abcissa: [1.0, 0.9766, 0.9688, 0.9609, 0.9531, 0.8516, 0.7344, 0.6172, 0.5,
                     0.4531, 0.2813, 0.1719, 0.1016, 0.0703, 0.0625, 0.0547, 0.0]
    target_ordinate: [1, 0.65928, 0.57492, 0.51117, 0.46604, 0.33304, 0.18719, 0.05702, -0.0608,
                      -0.10648, -0.27805, -0.38289, -0.2973, -0.2222, -0.20196, -0.18109, 0]
  
-   name: v-vel center
    type: LineProbe
    field: u1
    startpos: [0, 0.5]
    endpos: [1, 0.5]
    Npoints: 100
    file_name: vprobe.txt
    write_interval: 10

    # Targets only used in post-processor
    target_name: Ghia et al
    target_abcissa: [1.0, 0.9688, 0.9609, 0.9531, 0.9453, 0.9063, 0.8594, 0.8047, 0.5,
                     0.2344, 0.2266, 0.1563, 0.0938, 0.0781, 0.0703, 0.0625, 0.0]
    target_ordinate: [0, -0.21388, -0.27669, -0.33714, -0.39188, -0.5155, -0.42665, -0.31966,
                      0.02526, 0.32235, 0.33075, 0.37095, 0.32627, 0.30353, 0.29012, 0.27485, 0.0]

#console_at_end: false
#console_on_error: true
