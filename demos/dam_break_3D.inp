ocellaris:
    type: input
    version: 1.0

user_code:
    constants:
        A: 0.05715  # 0.0254 * 2.25
        N: 5

physical_properties:
    rho0: 1000.0
    nu0: 1.0e-6
    rho1: 1.0
    nu1: 1.5e-5
    g: [0, 0, -9.81]

mesh:
    type: Box
    Nx: py$ N * 4
    Ny: 1
    Nz: py$ int(N * 2.5)
    endx: py$ A * 4
    endy: py$ A / N
    endz: py$ A * 2.5

# BCs with wall slip
boundary_conditions:
-   name: all walls
    selector: code
    inside_code: 'on_boundary'
    p:
        type: WallPressure
    u:
        type: FreeSlip

initial_conditions:
    cp:
        cpp_code: '(x[0] < A + 1e-5 && x[2] < 2 * A + 1e-5) ? 1.0 : 0.0'
    cpp:
        cpp_code: '(x[0] < A + 1e-5 && x[2] < 2 * A + 1e-5) ? 1.0 : 0.0'

time:
    dt: py$ 0.001/N
    tmax: 0.3

output:
    prefix: py$ 'output/dam_break_3D_%02d' % N
    dolfin_log_level: warning
    ocellaris_log_level: info
    xdmf_write_interval: 10
    plot_divergences: yes
    divergence_method: div0

multiphase_solver:
    type: BlendedAlgebraicVOF
    function_space_colour: DG
    polynomial_degree_colour: 0

solver:
    type: IPCS-A
    num_inner_iter: py$ 30 if it < 3 else (10 if it < 10 else 3)
    hydrostatic_pressure_calculation_every_timestep: yes
    allowable_error_inner: 1e-8
    function_space_velocity: DG
    function_space_pressure: DG
    polynomial_degree_velocity: 2
    polynomial_degree_pressure: 1
    
    u:
        #petsc_pc_type: bjacobi
        #petsc_sub_ksp_type: preonly
        #petsc_sub_pc_type: ilu
        #petsc_sub_pc_factor_levels: 0
        
        #petsc_help: ENABLED
        
        inner_iter_control: [5, 3]
        inner_iter_rtol: [1.0e-4, 1.0e-6, 1.0e-8]
        inner_iter_atol: [1.0e-6, 1.0e-8, 1.0e-10]
        inner_iter_max_it: [5, 20, 30]
    
    p:
        petsc_ksp_type: cg
        petsc_pc_type: gamg
        petsc_mg_coarse_ksp_type: preonly
        petsc_mg_coarse_pc_type: svd
        
        inner_iter_control: [5, 3]
        inner_iter_rtol: [1.0e-4, 1.0e-6, 1.0e-8]
        inner_iter_atol: [1.0e-6, 1.0e-8, 1.0e-10]
        inner_iter_max_it: [5, 20, 30]

convection:
    c:
        convection_scheme: HRIC

slope_limiter:
    c:
        enforce_bounds: yes
    u:
        #method: Solenoidal
        #out_of_bounds_penalty_fac: 1000.0
        #out_of_bounds_penalty_const: 0.1
        
        method: Componentwise
        comp_method: HierarchicalTaylor
        limit_conv: no
        
        plot: yes
        use_cpp: yes
        skip_boundary: no
        #limit_no_cells: yes
        #max_cost: 0.1
        #surface_probe: free_surface

probes:
    -   name: free_surface
        enabled: no
        type: IsoSurface
        value: 0.5
        field: c
        file_name: '_free_surface.out'
        custom_hook: MultiPhaseModelUpdated
