ocellaris:
    type: input
    version: 1.0
    
user_code:
    constants:
        NU: 1.0e-4
        RHO_MIN: 999.0
        RHO_MAX: 1022.0

physical_properties:
    rho_min: py$ RHO_MIN
    rho_max: py$ RHO_MAX
    nu: py$ NU
    g: [0, -9.81]

mesh:
    type: Rectangle
    #Nx: 256
    #Ny: 128
    Nx: 160
    Ny: 40
    #Nx: 80
    #Ny: 20
    #Nx: 50
    #Ny: 15
    starty: 0.5
    endx: 4

boundary_conditions:
-   name: bottom and top
    selector: code
    inside_code: 'on_boundary and (x[1] < 0.5+1e-5 or x[1] > 1 - 1e-5)'
    p:
        type: WallPressure
    u0:
        #type: ConstantGradient
        type: ConstantValue
        value: 0
    u1:
        type: ConstantValue
        value: 0
-   name: walls
    selector: code
    inside_code: 'on_boundary and (x[0] < 1e-5 or x[0] > 4 - 1e-5)'
    p:
        type: WallPressure
    u0:
        type: ConstantValue
        value: 0
    u1:
        #type: ConstantGradient
        type: ConstantValue
        value: 0

initial_conditions:
    rho_p:
        cpp_code: '((x[0] < 0.25 - 1e-5 && x[1] > 0.67 - 1e-5) || x[1] > 0.75 - 1e-5) ? RHO_MIN : RHO_MAX'

time:
    dt: 0.1
    tmax: 20.1

output:
    prefix: output/internal_soliton
    dolfin_log_level: warning
    ocellaris_log_level: info
    xdmf_write_interval: 1

multiphase_solver:
    type: VariableDensity
    function_space_colour: DG
    polynomial_degree_colour: 0
    sky_location: 1.0

solver:
    type: Coupled
    num_inner_iter: 100
    allowable_error_inner: 1e-5
    function_space_velocity: DG
    function_space_pressure: DG
    polynomial_degree_velocity: 2
    polynomial_degree_pressure: 1

slope_limiter:
    rho:
        method: HierarchicalTaylor
        plot: yes

probes:
    -   name: free surface
        type: IsoSurface
        value: 1010.5
        field: rho
        file_name: '_free_surface.out'
        show_interval: 0

