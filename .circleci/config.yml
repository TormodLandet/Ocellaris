version: 2
jobs:
  build:
    docker:
      - image: trlandet/fenics-dev:py3_CI
    working_directory: /home/fenics/working
    steps:
      - checkout
      - run:
          name: Install/update dependencies
          command: |
                sudo pip3 install pip --upgrade
                sudo pip3 install pytest pytest-timeout pytest-instafail --upgrade
                #sudo pip3 install flake8 --upgrade
                sudo pip3 install meshio raschii PyYAML yschema --upgrade
      - run:
          name: Environment and FEniCS version info
          command: |
                echo $USER $HOME $PWD $PATH $LD_LIBRARY_PATH $CMAKE_PREFIX_PATH
                python3 -c 'import ffc; print(ffc.git_commit_hash(), ffc.ufc_signature())'
                python3 -c 'import dolfin; print(dolfin.git_commit_hash())'
                python3 -c 'from petsc4py import PETSc; print(PETSc.Sys.getVersionInfo())'
      - run:
          name: Install Ocellaris
          command: sudo pip3 install .
      - run:
          name: Import Ocellaris - compiles the C++ code and prints version info
          command: python3 -c 'import ocellaris; print(ocellaris.get_detailed_version())'
      - run:
          name: Build documentation
          command: bash documentation/circleci.sh
      - store_test_results:
          path: /reports
      - store_artifacts:
          path: /reports
