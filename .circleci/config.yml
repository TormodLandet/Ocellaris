version: 2
jobs:
  build:
    docker:
      - image: trlandet/fenics-dev:py3_CI
    working_directory: /home/fenics/working
    steps:
      - checkout
      - run:
          name: Install/update dependencies
          command: |
                sudo pip3 install pip --upgrade
                sudo pip3 install pytest pytest-timeout pytest-instafail --upgrade
                #sudo pip3 install flake8 --upgrade
                sudo pip3 install meshio==2.3.0 raschii PyYAML yschema --upgrade
      - run:
          name: Environment and FEniCS version info
          command: |
                echo $USER $HOME $PWD $PATH $LD_LIBRARY_PATH $CMAKE_PREFIX_PATH
                python3 -c 'import ffc; print(ffc.git_commit_hash(), ffc.ufc_signature())'
                python3 -c 'import dolfin; print(dolfin.git_commit_hash())'
      - run:
          name: Install Ocellaris
          command: sudo pip3 install .
      - run:
          name: Import Ocellaris - compiles the C++ code and prints version info
          command: python3 -c 'import ocellaris; print(ocellaris.get_detailed_version())'
      - run:
          name: Run unit tests
          command: |
                python3 -m pytest -v tests/ \
                    --instafail \
                    --timeout=300 \
                    --durations=10 \
                    --junitxml=/reports/pytest/serial.xml
      - run:
          name: Run unit tests with MPI
          command: |
                mpirun -n 3 python3 -m pytest -v tests/ \
                    --maxfail=1 \
                    --timeout=300 \
                    --durations=10 \
                    --junitxml=/reports/pytest/MPI.xml
      - run:
          name: Run regression tests
          command: |
                python3 -m pytest -v cases/regression_tests.py \
                    --instafail \
                    --timeout=300 \
                    --durations=0 \
                    --junitxml=/reports/pytest/regressions_serial.xml
      - run:
          name: Run demo tests
          command: |
                python3 -m pytest -v demos/ \
                    --instafail \
                    --timeout=300 \
                    --durations=0 \
                    --junitxml=/reports/pytest/demos_serial.xml
#      - run:
#          name: Run flake8
#          command: python3 -m flake8 ocellaris*
      - run:
          name: Build documentation
          command: bash documentation/circleci.sh
      - store_test_results:
          path: /reports
      - store_artifacts:
          path: /reports
